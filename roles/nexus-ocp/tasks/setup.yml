---
# Tasks to setup Nexus the first time

# Discover admin password for 3.17+
- name: Get name of nexus pod
  k8s_facts:
    api_version: v1
    kind: Pod
    namespace: "{{ _nexus_namespace }}"
    label_selectors: "app={{ _nexus_name }}"
  register: r_nexus_pod

- name: Attempt to fetch password file
  shell: "oc cp {{ _nexus_namespace}}/{{ r_nexus_pod.resources[0].metadata.name }}:/nexus-data/admin.password /tmp/admin.password"
  ignore_errors: true

- name: Check for temporary file
  stat:
    path: /tmp/admin.password
  register: r_password_file

- name: Get admin password for 3.17+
  when: r_password_file.stat.exists
  block:
  - name: Read admin password for 3.17+
    slurp:
      src: /tmp/admin.password
    register: r_admin_password
  - name: Remove temporary file for 3.17+
    file:
      path: /tmp/admin.password
      state: absent
  - name: Set current admin password for 3.17+
    set_fact:
      _nexus_current_password: "{{ r_admin_password['content']|b64decode }}"

- name: Set Current password to admin password if password file does not exist
  when: not r_password_file.stat.exists
  set_fact:
    _nexus_current_password: "{{ _nexus_admin_password }}"

- name: Enable the script API
  shell: "oc rsh -n {{ _nexus_namespace}} {{ r_nexus_pod.resources[0].metadata.name }} echo nexus.scripts.allowCreation=true >> /nexus-data/etc/nexus.properties"

- name: Restart Nexus Pod
  k8s:
    state: absent
    api_version: v1
    kind: Pod
    namespace: "{{ _nexus_namespace}}"
    name: "{{ r_nexus_pod.resources[0].metadata.name }}"

- name: Wait 10 seconds
  pause:
    seconds: 10

- name: Wait for Nexus to be back up and running
  k8s_facts:
    api_version: v1
    kind: Deployment
    namespace: "{{ _nexus_namespace}}"
    name: "{{ _nexus_name}}"
  register: r_nexus_deployment
  retries: 30
  delay: 10
  until:
  - r_nexus_deployment.resources | length | int > 0
  - r_nexus_deployment.resources[0].status.availableReplicas is defined
  - r_nexus_deployment.resources[0].status.availableReplicas | int == r_nexus_deployment.resources[0].spec.replicas | int

# Upload all groovy scripts we will be using
- name: Declare groovy scripts
  include_tasks: declare_script.yml
  with_items:
    - update_admin_password
    - delete_repo
    - create_repo_maven_proxy
    - create_repo_maven_group
    - create_repo_maven_hosted
    - create_repo_docker_hosted
    - create_repo_npm_hosted
    - create_repo_npm_proxy
    - create_repo_npm_group
    - set_anon_access

# Delete default repos
- name: Delete default repos
  include_tasks: delete_repo.yml
  when: _nexus_delete_default_repos | bool
  with_items:
    - maven-central
    - maven-public
    - maven-releases
    - maven-snapshots
    - nuget-group
    - nuget-hosted
    - nuget.org-proxy

- name: Create Maven Proxies
  include_tasks: create_repo_maven_proxy.yml
  with_items: "{{ nexus_repos_maven_proxy | d(_nexus_repos_maven_proxy) }}"

- name: Create Maven Hosted Repos
  include_tasks: create_repo_maven_hosted.yml
  with_items: "{{ nexus_repos_maven_hosted | d(_nexus_repos_maven_hosted) }}"

- name: Create Maven Groups
  include_tasks: create_repo_maven_group.yml
  with_items: "{{ nexus_repos_maven_group |  d(_nexus_repos_maven_group) }}"

- name: Create Docker Repos
  include_tasks: create_repo_docker_hosted.yml
  with_items: "{{ nexus_repos_docker_hosted | d(_nexus_repos_docker_hosted) }}"

- name: Create NPM Proxies
  include_tasks: create_repo_npm_proxy.yml
  with_items: "{{ nexus_repos_npm_proxy | d(_nexus_repos_npm_proxy) }}"

- name: Create NPM Groups
  include_tasks: create_repo_npm_group.yml
  with_items: "{{ nexus_repos_npm_group | d(_nexus_repos_npm_group) }}"

- name: Turn on Anonymous Access
  include_tasks: set_anon_access.yml

- name: Update Admin Password
  when: _nexus_new_admin_password | length > 0
  include_tasks: update_admin_password.yml

- name: Change default password
  when: _nexus_new_admin_password | length > 0
  set_fact:
    _nexus_admin_password: "{{ _nexus_new_admin_password }}"

# The following will fail unless this is running as an operator
# Report current admin password in Nexus CR status
- name: Save password in custom resource status
  operator_sdk.util.k8s_status:
    api_version: app.example.com/v1
    kind: Foo
    name: "{{ meta.name }}"
    namespace: "{{ meta.namespace }}"
    status:
      foo: bar 
  ignore_errors: true
